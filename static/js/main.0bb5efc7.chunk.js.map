{"version":3,"sources":["pages/TimeSlots/request.js","pages/TimeSlots/utils.js","pages/TimeSlots/Picker/PickerItem/PickerItem.styled.js","pages/TimeSlots/Picker/PickerItem/PickerItem.js","pages/TimeSlots/Picker/Picker.styled.js","pages/TimeSlots/Picker/Picker.js","pages/TimeSlots/Picker/PickerSkeleton/PickerSkeleton.styled.js","pages/TimeSlots/Picker/PickerSkeleton/PickerSkeleton.js","pages/TimeSlots/TimeSlots.styled.js","pages/TimeSlots/TimeSlots.js","pages/TimeSlots/dataTransforms.js","App.styled.js","App.js","styleConfigs/Theme.js","index.js"],"names":["Promise","resolve","setTimeout","mockData","extractDay","isoDate","moment","day","parseTime","isoString","format","Styled","Item","styled","div","props","theme","colors","gray","disabled","css","Time","time","fontSizes","h3","PickerItem","startTime","endTime","handleClick","parsedTime","start","end","onClick","dateTime","Listing","breakpoints","desktop","Container","Name","h1","Day","h2","SelectedDay","SelectedSlot","selected","success","Clear","danger","body","Picker","name","id","selectedTimeSlot","setSelectedTimeSlot","availableTimeSlots","validateSlot","slot","selectedSlot","start_time","isSame","isBetween","end_time","copiedState","handleClearSlot","Object","keys","map","iterator","key","item","isTaken","hasOwnProperty","element","isSlotAlreadyTaken","shineLoadingAnimation","keyframes","sharedStyles","skeleton","PickerSkeleton","index","main","TimeSlots","useState","data","setData","useEffect","fetchCompaniesAvailability","a","TimeSlotsRequest","length","inputData","time_slots","reduce","acc","curr","array","restOfSlots","GlobalStyle","createGlobalStyle","fonts","roboto","App","Theme","children","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"k9UAEe,aACqB,OAAD,6HACxB,IAAIA,SAAQ,SAAAC,GACjBC,YAAW,WACTD,EAAQE,KACP,SAJ0B,8C,sCCDtBC,EAAa,SAAAC,GAWxB,MAViB,CACf,SACA,SACA,UACA,YACA,WACA,SACA,YAGcC,IAAOD,GAASE,QAErBC,EAAY,SAAAC,GAAS,OAAIH,IAAOG,GAAWC,OAAO,U,seCb/D,IAoBaC,EAAS,CACpBC,KArBWC,IAAOC,IAAV,KAGY,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,QAO9C,SAAAH,GAAK,OAAIA,EAAMI,UAAYC,YAAlB,KACW,SAAAL,GAAK,OAAIA,EAAMC,MAAMC,OAAOE,eAWlDE,KANWR,IAAOS,KAAV,KACK,SAAAP,GAAK,OAAIA,EAAMC,MAAMO,UAAUC,OCqB/BC,EAhCI,SAAC,GAKb,IAJLC,EAII,EAJJA,UACAC,EAGI,EAHJA,QACAR,EAEI,EAFJA,SACAS,EACI,EADJA,YAEMC,EAAa,CACjBC,MAAOtB,EAAUkB,GACjBK,IAAKvB,EAAUmB,IAEjB,OACE,kBAAChB,EAAOC,KAAR,CACEO,SAAUA,EACVa,QAASJ,GAET,kBAACjB,EAAOU,KAAR,CAAaY,SAAUJ,EAAWC,OAC/BD,EAAWC,OALhB,IAOE,kBAACnB,EAAOU,KAAR,CAAaY,SAAUJ,EAAWE,KAC/BF,EAAWE,O,2mCCzBpB,IAAMG,EAAUrB,IAAOC,IAAV,KACS,SAAAC,GAAK,OAAIA,EAAMC,MAAMmB,YAAYC,WAMjDC,EAAYxB,IAAOC,IAAV,KAITwB,EAAOzB,IAAO0B,GAAV,KACK,SAAAxB,GAAK,OAAIA,EAAMC,MAAMO,UAAUgB,MAGxCC,EAAM3B,IAAOW,GAAV,KACM,SAAAT,GAAK,OAAIA,EAAMC,MAAMO,UAAUkB,MAGxCC,EAAc7B,IAAOW,GAAV,KAEF,SAAAT,GAAK,OAAIA,EAAMC,MAAMO,UAAUkB,MAgCjC9B,EAAS,CACpBuB,UACAG,YACAG,MACAF,OACAK,aAlCmB9B,IAAOC,IAAV,KAEI,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,QAKnC,SAAAH,GAAK,OAAIA,EAAMC,MAAMO,UAAUkB,MAM1C,SAAA1B,GAAK,OAAIA,EAAM6B,UAAYxB,YAAlB,KACW,SAAAL,GAAK,OAAIA,EAAMC,MAAMC,OAAO4B,cAqBlDC,MAjBYjC,IAAOC,IAAV,KACA,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,OAAO8B,UAGxB,SAAAhC,GAAK,OAAIA,EAAMC,MAAMO,UAAUyB,QAc5CN,eCgDaO,EArGA,SAAC,GAMT,IALLC,EAKI,EALJA,KACAC,EAII,EAJJA,GACAC,EAGI,EAHJA,iBACAC,EAEI,EAFJA,oBACAC,EACI,EADJA,mBAeMC,EAAe,SAACC,EAAMC,GAC1B,QAAInD,IAAOkD,EAAKE,YAAYC,OAAOF,EAAaC,aAGzCpD,IAAOkD,EAAKE,YAAYE,UAAUH,EAAaC,WAAYD,EAAaI,WAoBjF,OACE,kBAAC,EAAOxB,UAAR,KACE,kBAAC,EAAOC,KAAR,KAAcY,GACd,kBAAC,EAAOP,aAAR,CAAqBC,WAAYQ,EAAiBD,IAE9CC,EAAiBD,GACf,kBAAC,WAAD,KACE,kBAAC,EAAOT,YAAR,KACGtC,EAAWgD,EAAiBD,GAAIO,aAElClD,EAAU4C,EAAiBD,GAAIO,YAJlC,IAKGlD,EAAU4C,EAAiBD,GAAIU,UAChC,kBAAC,EAAOf,MAAR,CAAcd,QAAS,kBA3CX,SAAAmB,GACtB,IAAMW,EAAW,eAAOV,UACjBU,EAAYX,GAEnBE,EAAoBS,GAuCmBC,CAAgBZ,KAA7C,UAEA,oBAGR,kBAAC,EAAOjB,QAAR,KAEI8B,OAAOC,KAAKX,GAAoBY,KAAI,SAAC3D,EAAK4D,GACxC,OACE,kBAAC,WAAD,CAAUC,IAAKD,GACb,kBAAC,EAAO3B,IAAR,KACGjC,GAGD+C,EAAmB/C,GAAK2D,KAAI,SAACG,EAAMF,GACjC,IAAMhD,EA5CG,SAAAqC,GACzB,IAAIc,GAAU,EAEd,IAAK,IAAM1B,KAAYQ,EACrB,GAAIA,EAAiBmB,eAAe3B,GAAW,CAC7C,IAAM4B,EAAUpB,EAAiBR,GAEjC,GAAI0B,EACF,MAGFA,EAAUf,EAAaC,EAAMgB,GAGjC,QAASF,EA8BwBG,CAAmBJ,GAEpC,OACE,kBAAC,EAAD,CACE3C,UAAW2C,EAAKX,WAChB/B,QAAS0C,EAAKR,SACd1C,SAAUA,EACViD,IAAKD,EACLvC,YAAcT,EAA8C,aAAnC,kBAxElBqC,EAwE6Ca,OAvExEhB,EAAoB,2BACfD,GADc,kBAEhBD,EAAKK,KAHmB,IAAAA,e,q6BCd/B,IAAMkB,EAAwBC,YAAH,KAMrBC,EAAexD,YAAH,KAII,SAAAL,GAAK,OAAIA,EAAMC,MAAMC,OAAO4D,WAKpCH,GAuBD/D,EAAS,CACpB2B,KArBWzB,IAAOC,IAAV,IAEN8D,GAoBFjC,aAjBmB9B,IAAOC,IAAV,IAEd8D,GAgBFpC,IAbU3B,IAAOC,IAAV,IAEL8D,GAYFhE,KATWC,IAAOC,IAAV,IAEN8D,ICVWE,EAtBQ,WAErB,OACE,kBAAC,EAAazC,UAAd,KACE,kBAAC,EAAOC,KAAR,MACE,kBAAC,EAAOK,aAAR,MACA,kBAAC,EAAaT,QAAd,KACE,kBAAC,WAAD,KACE,kBAAC,EAAOM,IAAR,MAEE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG0B,KAAI,SAAAa,GAAK,OAAI,kBAAC,EAAOnE,KAAR,CAAawD,IAAKW,OAE/C,kBAAC,EAAOvC,IAAR,MAEE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG0B,KAAI,SAAAa,GAAK,OAAI,kBAAC,EAAOnE,KAAR,CAAawD,IAAKW,W,oMCjB3D,IASapE,EAAS,CACpB0B,UAVgBxB,IAAOmE,KAAV,KAIO,SAAAjE,GAAK,OAAIA,EAAMC,MAAMmB,YAAYC,YC0CxC6C,GAvCG,WAAO,IAAD,EACEC,mBAAS,IADX,mBACfC,EADe,KACTC,EADS,OAE0BF,mBAAS,IAFnC,mBAEf9B,EAFe,KAEGC,EAFH,KAItBgC,qBAAU,WACRC,MACC,IAEH,IAAMA,EAA0B,uCAAG,4BAAAC,EAAA,sEACdC,IADc,OAC3BL,EAD2B,OAGjCC,EAAQD,GAHyB,2CAAH,qDAMhC,OACE,kBAAC,EAAO9C,UAAR,KAEI8C,EAAKM,OACHN,EAAKjB,KAAI,SAAAG,GACP,OACE,kBAAC,EAAD,CACED,IAAKC,EAAKlB,GACVD,KAAMmB,EAAKnB,KACXC,GAAIkB,EAAKlB,GACTG,oBC/BeoC,ED+BoBrB,EAAKsB,WC9B/CD,EAAUE,QAAO,SAACC,EAAKC,EAAMf,EAAOgB,GACzC,IAAMxF,EAAMH,EAAW0F,EAAKpC,YACtBsC,EAAcH,EAAItF,GAAOsF,EAAItF,GAAO,GAE1C,OAAO,2BACFsF,GADL,kBAEGtF,EAFH,sBAGOyF,GAHP,CAII,CACEtC,WAAYoC,EAAKpC,WACjBG,SAAUiC,EAAKjC,gBAIpB,KDiBWT,iBAAkBA,EAClBC,oBAAqBA,ICjCN,IAAAqC,KDsCvB,CAAC,EAAE,EAAE,GAAGxB,KAAI,SAAAG,GACV,OAAO,kBAAC,EAAD,CAAgBD,IAAKC,S,oUEvCtC,IAca1D,GAAS,CACpB0B,UAfgBxB,IAAOC,IAAV,MAgBbmF,YAXkBC,YAAH,MAGE,SAAAnF,GAAK,OAAIA,EAAMC,MAAMmF,MAAMC,WCE/BC,OARf,WACE,OACE,kBAAC,GAAOhE,UAAR,KACE,kBAAC,GAAD,QCJArB,GAAQ,CACZC,OAAQ,CACN8B,OAAQ,SACRF,QAAS,OACT1B,SAAU,QACVD,KAAM,OACN2D,SAAU,WAEZsB,MAAO,CACLC,OAAQ,sBAEV7E,UAAW,CACTgB,GAAI,SACJE,GAAI,SACJjB,GAAI,SACJwB,KAAM,QAERb,YAAa,CACXC,QAAS,WAQEkE,GAJD,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACZ,kBAAC,IAAD,CAAevF,MAAOA,IAAQuF,ICpBhCC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,KACE,kBAAC,GAAOT,YAAR,MACA,kBAAC,GAAD,QAGJU,SAASC,eAAe,W","file":"static/js/main.0bb5efc7.chunk.js","sourcesContent":["import mockData from './mockData.json';\n\nexport default {\n  async getCompaniesAvailability() {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        resolve(mockData);\n      }, 2000);\n    });\n  }\n}","import moment from \"moment\";\n\nexport const extractDay = isoDate => {\n  const MAP_DAYS = [\n    'Sunday',\n    'Monday', \n    'Tuesday', \n    'Wednesday', \n    'Thursday', \n    'Friday', \n    'Saturday'\n  ];\n\n  return MAP_DAYS[moment(isoDate).day()];\n}\nexport const parseTime = isoString => moment(isoString).format(\"hh:mm\");\n","import styled, { css } from 'styled-components';\n\nconst Item = styled.div`\n  cursor: pointer;\n  margin-bottom: 1rem;\n  border: 1px solid ${props => props.theme.colors.gray};\n  max-width: 70%;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 8px;\n  border-radius: 5px;\n\n  ${props => props.disabled && css`\n    background-color: ${props => props.theme.colors.disabled};;\n    cursor: not-allowed;\n  `}\n`;\n\nconst Time = styled.time`\n  font-size: ${props => props.theme.fontSizes.h3};\n`;\n\nexport const Styled = {\n  Item,\n  Time\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {isValidIsoDate} from '../../../../utils/customPropTypes';\n\nimport {parseTime} from '../../utils';\n\nimport {Styled} from './PickerItem.styled.js';\n\nconst PickerItem = ({\n  startTime, \n  endTime, \n  disabled,\n  handleClick\n}) => {\n  const parsedTime = {\n    start: parseTime(startTime),\n    end: parseTime(endTime)\n  }\n  return (\n    <Styled.Item \n      disabled={disabled} \n      onClick={handleClick}\n    >\n      <Styled.Time dateTime={parsedTime.start}>\n        {parsedTime.start}\n      </Styled.Time>-\n      <Styled.Time dateTime={parsedTime.end}>\n        {parsedTime.end}\n      </Styled.Time>\n    </Styled.Item>\n  )\n}\n\nPickerItem.propTypes = {\n  startTime: isValidIsoDate,\n  endTime: isValidIsoDate,\n  disabled: PropTypes.bool,\n  handleClick: PropTypes.func,\n};\n\nexport default PickerItem;","import styled, { css } from 'styled-components';\n\nconst Listing = styled.div`\n  @media(min-width: ${props => props.theme.breakpoints.desktop}) {\n    height: calc(100vh - 165px);\n    overflow-y: scroll;\n  }\n`;\n\nconst Container = styled.div`\n  text-align: center;\n`;\n\nconst Name = styled.h1`\n  font-size: ${props => props.theme.fontSizes.h1};\n`;\n\nconst Day = styled.h3`\n  font-size: ${props => props.theme.fontSizes.h2};\n`;\n\nconst SelectedDay = styled.h3`\n  margin: 0;\n  font-size: ${props => props.theme.fontSizes.h2};\n`;\n\nconst SelectedSlot = styled.div`\n  min-height: 90px;\n  border: 1px solid ${props => props.theme.colors.gray};\n  margin: 0 5px;\n  border-radius: 5px;\n\n  position: relative;\n  font-size: ${props => props.theme.fontSizes.h2};\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n\n  ${props => props.selected && css`\n    background-color: ${props => props.theme.colors.success};\n  `}\n`;\n\nconst Clear = styled.div`\n  color: ${props => props.theme.colors.danger};\n  cursor: pointer;\n  font-weight: bold;\n  font-size: ${props => props.theme.fontSizes.body};\n\n  position: absolute;\n  top: 10px;\n  right: 10px;\n`;\n\nexport const Styled = {\n  Listing,\n  Container,\n  Day,\n  Name,\n  SelectedSlot,\n  Clear,\n  SelectedDay\n}","import React, {Fragment} from \"react\";\nimport PropTypes from 'prop-types';\nimport moment from \"moment\";\nimport {parseTime, extractDay} from '../utils';\n\nimport PickerItem from './PickerItem/PickerItem';\n\nimport {Styled} from './Picker.styled.js';\n\nconst Picker = ({\n  name,\n  id,\n  selectedTimeSlot,\n  setSelectedTimeSlot,\n  availableTimeSlots,\n}) => {\n  const handleSelectTimeSlot = slot => {\n    setSelectedTimeSlot({\n      ...selectedTimeSlot,\n      [id]: slot\n    })\n  };\n  const handleClearSlot = id => {\n    const copiedState = {...selectedTimeSlot};\n    delete copiedState[id];\n\n    setSelectedTimeSlot(copiedState);\n  }\n\n  const validateSlot = (slot, selectedSlot) => {\n    if (moment(slot.start_time).isSame(selectedSlot.start_time)) {\n      return true;\n    }\n    return moment(slot.start_time).isBetween(selectedSlot.start_time, selectedSlot.end_time);\n  }\n\n  const isSlotAlreadyTaken = slot => {\n    let isTaken = false;\n\n    for (const selected in selectedTimeSlot) {\n      if (selectedTimeSlot.hasOwnProperty(selected)) {\n        const element = selectedTimeSlot[selected];\n\n        if (isTaken) {\n          break;\n        }\n        \n        isTaken = validateSlot(slot, element);\n      }\n    }\n    return !!isTaken;\n  }\n\n  return (\n    <Styled.Container>\n      <Styled.Name>{name}</Styled.Name>\n      <Styled.SelectedSlot selected={!!selectedTimeSlot[id]}>\n        {\n          selectedTimeSlot[id] ? (\n            <Fragment>\n              <Styled.SelectedDay>\n                {extractDay(selectedTimeSlot[id].start_time)}\n              </Styled.SelectedDay>\n              {parseTime(selectedTimeSlot[id].start_time)}-\n              {parseTime(selectedTimeSlot[id].end_time)}\n              <Styled.Clear onClick={() => handleClearSlot(id)}>clear</Styled.Clear>\n            </Fragment>\n          ) : \"Select time slot\"\n        }\n      </Styled.SelectedSlot>\n      <Styled.Listing>\n        {\n          Object.keys(availableTimeSlots).map((day, iterator) => {\n            return (\n              <Fragment key={iterator}>\n                <Styled.Day>\n                  {day}\n                </Styled.Day>\n                {\n                  availableTimeSlots[day].map((item, iterator) => {\n                    const disabled = isSlotAlreadyTaken(item);\n\n                    return (\n                      <PickerItem \n                        startTime={item.start_time}\n                        endTime={item.end_time}\n                        disabled={disabled}\n                        key={iterator}\n                        handleClick={!disabled ? () => handleSelectTimeSlot(item) : () => {}}\n                    />\n                    )   \n                  })\n                }\n              </Fragment>\n            )\n          })\n        }\n      </Styled.Listing>\n    </Styled.Container>\n  );\n}\n\nPicker.propTypes = {\n  name: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n  selectedTimeSlot: PropTypes.object,\n  setSelectedTimeSlot: PropTypes.func.isRequired,\n  availableTimeSlots: PropTypes.object.isRequired,\n};\n\nexport default Picker;","import styled, {css, keyframes} from \"styled-components\";\n\nconst shineLoadingAnimation = keyframes`\n  to {\n\t\tbackground-position: right -40px top 0;\n\t}\n`;\n\nconst sharedStyles = css`\n  border-radius: 5px;\n  margin: 20px 10px;\n  \n  background-color: ${props => props.theme.colors.skeleton};\n  background-image: linear-gradient(90deg, rgba(255, 255, 255, 0), rgba(255, 255, 255, 0.5), rgba(255, 255, 255, 0));\n\tbackground-size: 40px 100%;\n\tbackground-repeat: no-repeat;\n\tbackground-position: left -40px top 0;\n\tanimation: ${shineLoadingAnimation} 1s ease infinite;\n`;\n\nconst Name = styled.div`\n  min-height: 33px;\n  ${sharedStyles}\n`;\n\nconst SelectedSlot = styled.div`\n  min-height: 100px;\n  ${sharedStyles}\n`;\n\nconst Day = styled.div`\n  min-height: 52px;\n  ${sharedStyles}\n`;\n\nconst Item = styled.div`\n  min-height: 24px;\n  ${sharedStyles}\n`;\n\nexport const Styled = {\n  Name,\n  SelectedSlot,\n  Day,\n  Item\n}","import React, {Fragment} from \"react\";\n\nimport {Styled as PickerStyled} from '../Picker.styled.js';\nimport {Styled} from './PickerSkeleton.styled';\n\nconst PickerSkeleton = () => {\n\n  return (\n    <PickerStyled.Container>\n      <Styled.Name/>\n        <Styled.SelectedSlot/>\n        <PickerStyled.Listing>\n          <Fragment>\n            <Styled.Day/>\n            {\n              [1,2,3,4,5,6].map(index => <Styled.Item key={index}/>)\n            }\n            <Styled.Day/>\n            {\n              [1,2,3,4,5,6].map(index => <Styled.Item key={index}/>)\n            }\n          </Fragment>\n        </PickerStyled.Listing>\n    </PickerStyled.Container>\n  )\n}\n\nexport default PickerSkeleton;","import styled from 'styled-components';\n\nconst Container = styled.main`\n  display: grid;\n  grid-template-columns: 1fr;\n\n  @media(min-width: ${props => props.theme.breakpoints.desktop}) {\n    grid-template-columns: 1fr 1fr 1fr;\n  }\n`;\n\nexport const Styled = {\n  Container\n}","import React, {useEffect, useState} from \"react\";\nimport TimeSlotsRequest from './request';\nimport {transformSlots} from './dataTransforms';\n\nimport Picker from \"./Picker/Picker\";\nimport PickerSkeleton from './Picker/PickerSkeleton/PickerSkeleton';\n\nimport {Styled} from './TimeSlots.styled';\n\nconst TimeSlots = () => {\n  const [data, setData] = useState([]);\n  const [selectedTimeSlot, setSelectedTimeSlot] = useState({});\n\n  useEffect(() => {\n    fetchCompaniesAvailability();\n  }, [])\n\n  const fetchCompaniesAvailability = async () => {\n    const data = await TimeSlotsRequest.getCompaniesAvailability();\n\n    setData(data);\n  }\n\n  return (\n    <Styled.Container>\n      {\n        data.length ? (\n          data.map(item => {\n            return (\n              <Picker\n                key={item.id} \n                name={item.name}\n                id={item.id}\n                availableTimeSlots={transformSlots(item.time_slots)}\n                selectedTimeSlot={selectedTimeSlot}\n                setSelectedTimeSlot={setSelectedTimeSlot}\n              />\n            )\n          })\n        ) : \n        [1,2,3].map(item => {\n          return <PickerSkeleton key={item}/>\n        })\n      }\n    </Styled.Container>\n  );\n}\n\nexport default TimeSlots;"," import {extractDay} from './utils';\n\n export const transformSlots = inputData => {\n  return inputData.reduce((acc, curr, index, array) => {\n    const day = extractDay(curr.start_time);\n    const restOfSlots = acc[day] ? acc[day] : [];\n\n    return {\n      ...acc,\n      [day]: [\n        ...restOfSlots,\n        {\n          start_time: curr.start_time,\n          end_time: curr.end_time\n        }\n      ]\n    }\n  }, {})\n}","import styled, { createGlobalStyle } from 'styled-components';\n\nconst Container = styled.div`\n  max-width: 1024px;\n  margin: 0 auto;\n`;\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    font-family: ${props => props.theme.fonts.roboto};\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n`;\n\nexport const Styled = {\n  Container,\n  GlobalStyle\n}","import React from 'react';\nimport TimeSlots from './pages/TimeSlots/TimeSlots';\nimport {Styled} from './App.styled';\n\nfunction App() {\n  return (\n    <Styled.Container>\n      <TimeSlots />    \n    </Styled.Container>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport { ThemeProvider } from \"styled-components\";\n\nconst theme = {\n  colors: {\n    danger: \"tomato\",\n    success: \"cyan\",\n    disabled: \"beige\",\n    gray: \"gray\",\n    skeleton: \"#e2e5e7\"\n  },\n  fonts: {\n    roboto: 'Roboto, sans-serif'\n  },\n  fontSizes: {\n    h1: \"1.8rem\",\n    h2: \"1.5rem\",\n    h3: \"1.3rem\",\n    body: \"1rem\"\n  },\n  breakpoints: {\n    desktop: '1024px'\n  }\n};\n\nconst Theme = ({ children }) => (\n  <ThemeProvider theme={theme}>{children}</ThemeProvider>\n);\n\nexport default Theme;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {Styled} from './App.styled';\nimport Theme from './styleConfigs/Theme';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Theme>\n      <Styled.GlobalStyle />\n      <App />\n    </Theme>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}